■ IT
* IT: Information Technology 情報技術そのもの（コンピューター、ソフトウェア、アプリなど）
* ICT: Information and Communication Technology 通信技術を使って人とインターネット、人と人が繋がる技術（メール、チャット、SNSの活用、通信販売など）
* IoT: Internet of Things身の回りのものがインターネットと繋がる技術（スマート家電） 
■ OS
* OS: Operating System コンピューターを動かすためのソフトウェア, CPUの入出力や同時並行処理といったものを管理するプログラム
* Windows: ゲームをしたりするのに特化したクローズドソースソフトウエアのOS, Microsoft社が作ったもの
* macOS (Mac OS X):Apple社が開発している
* UNIX:もともと電話を発明したベル研修所が発表した初期のOS
* Linux: オープンソースソフトウェア, 何かを作ったり、動かしたりすることの特化したOS無料で中身も公開されているため、多くの人々によって開発・改良
■ 言語・環境
* マークアップ(ユーザーがブラウザで表示する「見た目」を作る)／フロントエンド(ユーザーがWebサービスを操作したときに、画面に変化が現れる仕組みやサーバーサイドのプログラムにデータや指示を渡し、返答を受け取る仕組みを作る)
    * HTML
    * CSS
    * JavaScript
* サーバーサイド
    * .NET（C#, VB）
    * Java:代表的なサーバサイドプログラミング言語
        * Java SE: Java Standard Edition, Javaの基本機能をまとめたもの
        * Java EE（Jakarta EE）:Java Enterprise Edition, JavaSEを元にしてサーバーサイドの機能を追加したもの
    * Perl: Practical Extraction and Report Language, テキスト処理が得意なスクリプト言語
    * PHP:ほとんどWebアプリケーションのサーバサイド専用
    * Ruby:日本人が作ったプログラミング言語であるRubyも人気のサーバ言語
■ サーバーソフト：ウェブページをユーザーのブラウザに配信するために使用
* Apache: 世界中で使用されているWebサーバーソフトウェア、1995年にリリース
* nginx: 2004年にリリース
* IIS: Internet Information Services, 無料で利用できるWebサーバーソフト
■ SQL
* SQL:Structured Query Languageデータベース言語の一つ
    * DB2: IBMが開発・販売するデータベース管理システムの1つ,　 SQLを初めて採用した関係データベース管理システム Linux,Unix, Windows用
    * MySQL: オープンソースのデータベース管理システム, WEBでよく使われる
        * Maria DB: MySQL派生の、オープンソースのデータベース管理システム
    * Oracle DB: オラクル社が開発・販売しているリレーショナル・データベース管理 システム
    * PostgreSQL: オープンソースのリレーショナルデータベース管理システム
    * SQLite: 軽量コンパクトなリレーショナルデータベースシステム, 主に「組み込み用途」や「小規模システムのデータストア」として利用されている
    * SQL Server: Microsoftのデータベースアプリケーション
* CRUD: システムに必要な4つの主要機能である「Create（生成）」「Read（読み取り）」「Update（更新）」「Delete（削除）」の頭文字を並べた用語
* トランザクション: 複数の処理を1つにまとめたもの
    * コミット: トランザクションによるデータベースの更新内容が有効になること
    * ロールバック: ランザクションによる更新内容が無効になること
* 排他制御（排他ロック）:共有資源（データやファイル）に対して複数のアクセスが見込まれる場合に、同時アクセスにより不整合が発生することを防ぐため、あるトランザクションが共有資源（データやファイル）にアクセスしている時は他トランザクションからはアクセスできないようにして直列に処理されるように制御すること
    * 楽観ロック:めったなことでは他者との同時更新は起きないであろう、という楽観的な前提の排他制御。データそのものに対してロックは行わずに、更新対象のデータがデータ取得時と同じ状態であることを確認してから更新することで、データの整合性を保証する方式
    * 悲観ロック: 他者が同じデータに頻繁に変更を加えるであろう、という悲観的な前提の排他制御。更新対象のデータを取得する際にロックをかけることで、他のトランザクションから更新されないようにする方式
* 実行計画:実際に実行されるプログラムの概要を提示したもの
* チューニング: 性能の悪いSQLを発見し、その処理過程を改善すること
* パフォーマンス:処理性能や実行速度、通信回線・ネットワークなどの伝送速度・容量など
* スロークエリ:Slow query, 実行が遅いQuery
* クエリログ:クライアントからの MySQL Server への接続・接続解除の情報、およびクライアントから実行された全ての SQL クエリを出力してくれるログ
* IDE（統合開発環境）:ソフトウェア開発に必要なソフトウェアを一つに組み合わせ、同じ操作画面から統一的な操作法で利用できるようにしたソフトウェアパッケージ
    * Eclipse;主にJavaアプリケーションの開発に使用される
    * NetBeans:オラクルが開発しているオープンソースIDE
    * SpringToolSuite:Spring に特化している
* DBツール:データベース管理タスクに使用できるツール、ユーティリティ
    * A5:SQL Mk-2:データベース開発において生産性を向上させるべく開発されたSQL開発ツール
    * pgAdmin:GUIによるPostgreSQLの管理ツール
    * DBeaver:無料のSQLクライアントツール
    * MySQL Workbench: データベースの設計・開発・管理を一本で実現している無料ツール
    * Sequel Pro:
    * TeamSQL:
■ 肩書
* PM:プロジェクトマネージャー,開発プロジェクトの取りまとめを行う役割
* PL:プロジェクトリーダー,PMの補佐のような役目
* PG（PE）:プログラマー, SEの手足となって、SEが用意した仕様書をもとにプログラミング・単体テストをする
* SE:システムエンジニア, 開発メンバーの一員
* デザイナー
* エンジニア
    * フロントエンド・エンジニア
    * サーバーサイド・エンジニア
    * バックエンド・エンジニア
■ UI（ユーザーインターフェース）
* UI
    * CUI: Character based User Interface,テキストデータのみで表現されているUI
    * GUI:  graphical user interface,画像やアイコンなどで表現されているUI 
■ ファイル／ディレクトリ
* ファイル:データの管理単位
* 拡張子:ファイルの種類を識別するためにファイルの名前（ファイル名）の末尾につけられる文字列
* ディレクトリ:ファイルをグループ化するための特殊なファイル
    * ルート・ディレクトリ:階層型ファイル構造における最上階層のディレクトリ
    * カレント・ディレクトリ:ユーザーが現時点で作業を行なっている
* パス
    * 絶対パス:absolute path, 階層構造の頂点から目的地までの経路
    * 相対パス:relative path, ユーザが現在作業しているフォルダから目的のフォルダまでの経路
■ ネットワーク
* LAN:Local Area Network, 同じ建物の中などの限定された範囲で接続できるネットワーク
* WAN: Wide Area Network, だれもが自由に接続できるネットワーク
* クライアント:サービスを提供する側:サービスを要求する側、受ける側
* サーバー
■ 各種プロトコル:スムーズにデータ交換するために、ネットワークで通信をする上での決まり事
* HTTP: HyperText Transfer Protocol, インターネット上でクライアントとサーバーがHTMLで記述されたファイルを通信するためのプロトコル, Webサイト閲覧
* FTP:File Transfer Protocol,ファイル転送, ファイルをネットワーク上のある場所から別の場所に移動するため
* HTTPS：HyperText Transfer Protocol Secure, 通信内容が暗号化
* SSL:Secure Sockets Layer, 暗号化通信のプロトコル。httpsから始まるホームページで使われる
* SSH: Secure Shell, 暗号化された遠隔ログインシステム
* ポート、ポート番号: IPアドレスが住所「家」であれば、ポートは外に出る・外から入る「扉（ドア）」
* HTTP、FTP、SSHの各ポート番号:HTTP 80（TCP）, FTP 21（TCP）, SSH 22（TCP）
* ファイアウォール: 企業などの内部ネットワークをインターネットを通して侵入してくる不正なアクセスから守るための“防火壁”
* TCP: Transmission Control Protocol, TCPは確実性や信頼性の高いデータ通信を可能にするプロトコル
■ IPアドレス
* IPアドレス: ネットワーク上で各機器にIPアドレスを割り振り、対象のIPアドレスにデータを送るためのプロトコル、高速性やリアルタイム性を求めるインターネットで幅広く使用されている
    * グローバルIPアドレス:インターネットに接続する機器が使用できるIPアドレス
    * プライベートIPアドレス:組織内のネットワーク（プライベートネットワーク）でのみ使用できるIPアドレス
■ ドメイン
* ドメイン:インターネット上の「住所」
* DNS: Domain Name System, ドメインとIPアドレスを対応付けて管理するシステム
* VPN:Virtual Private Network,仮想的な通信トンネルを構成したプライベートなネットワーク
* ブリッジ:ネットワーク中のデータ（の中にあるMACアドレス）を見て、行き先を振り分けてくれる機器
* プロキシサーバー:Proxy Server, 内部のネットワークとインターネットの境界で動作し、両者間のアクセスを代理して行うもの
■ 電子メール
* SMTP:Simple main transfer protocol,メールの送信に用いるプロトコル
* POP:Post Office Protocol, メール受信に用いるプロトコル、端末にメールデータを自動的にダウンロードしていました
* IMAP: Internet Message access protocol,  メール受信に用いるプロトコル、メールサーバーに届いたメールを「インターネット」を介してメールソフトが読む
■ セッションとクッキー
* セッション:クッキーと同じくサーバー上の一時ディレクトリに保存されたデータ
* クッキー:ユーザーのコンピューターに保存される小さなファイル
* キャッシュ:よく使うデータへのアクセスを速くするために、より高速な記憶装置に一時的に保存する仕組み
■ DB（データベース）について
* インデックス:テーブルの情報を探す時に検索の対象としてよく使用するカラムの値だけを取り出して検索しやすいようにしておいたもの
■ テストについて
* フロー:処理の流れ
■ チケット管理ツール:施すべき作業項目や障害、課題などのタスクを登録、管理
* タスク
■ バージョン管理
* Git:プログラムソースなどの変更履歴を管理する分散型のバージョン管理システム
* SVN:オープンソースの集中型バージョン管理システム
* デグレ:degradation, オープンソースの集中型バージョン管理システム
* マージツール: バージョン管理されているファイル群に対して行われた変更を統合する操作
